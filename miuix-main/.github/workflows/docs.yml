# Simple workflow for deploying static content to GitHub Pages
name: Build Docs Page

on:
  # Only run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build Docs
        run: |
          ./gradlew :miuix:dokkaGenerate
          mkdir -p ./docs/public/dokka
          mv ./miuix/build/dokka/html/* ./docs/public/dokka
          ./gradlew :docs:demo:jsBrowserDistribution
          mkdir -p ./docs/public/compose
          mv ./docs/demo/build/dist/js/productionExecutable/* ./docs/public/compose
          cd ./docs
          yarn install
          yarn docs:build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/.vitepress/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4